image: node:6.10
before_script:
  - npm i -g grunt-cli
stages:
  - prepare
  - build
  - test
  - deploy
cache:
  paths:
    - node_modules/
install_dependencies:
  stage: prepare
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/
build:
  stage: build
  script: 
    - grunt build
  artifacts:
    paths:
      - dist/
  only:
    - master
  tags:
    - docker
test:
  stage: test
  dependencies:
    - build
  script: 
    # TODO: all this could be put in a Dockerfile...
    - set -xe
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
    # Update packages
    - apt-get update -yqqq
    # Install Chrome browser
    - apt-get install -y google-chrome-stable
#    # Install Virtual Display emulator
#    - apt-get install -y xvfb
#    # run tests in virtual display mode
#    - xvfb-run -a grunt test
    - npm run test:headless
    - cat coverage/*/index.html | grep -B 1 Statements | grep strong
  artifacts:
    paths:
      - coverage/
  only:
    - master
  tags:
    - docker
pages:
  stage: deploy
  dependencies:
    - test
  script:
    - mkdir public
    - mv coverage/*/* public/
  artifacts:
    paths:
      - public
  only:
    - master
deploy:
  stage: deploy
  dependencies:
    - build
    - test
  script: 
    - echo "{ \"key1\":{ \"username\":\"suis.je.antisemite\",   \"password\":\"$FTP_PWD\"  } }" > .ftppass
    - grunt serve
  only:
    - master
  tags:
    - docker